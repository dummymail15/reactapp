{"ast":null,"code":"\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n\n/* tslint:disable */\n\n/* eslint-disable */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sign_message_lib__factory = void 0;\n\nconst ethers_1 = require(\"ethers\");\n\nconst _abi = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"msgHash\",\n    type: \"bytes32\"\n  }],\n  name: \"SignMsg\",\n  type: \"event\"\n}, {\n  inputs: [{\n    internalType: \"bytes\",\n    name: \"message\",\n    type: \"bytes\"\n  }],\n  name: \"getMessageHash\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes\",\n    name: \"_data\",\n    type: \"bytes\"\n  }],\n  name: \"signMessage\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\n\nclass Sign_message_lib__factory {\n  static createInterface() {\n    return new ethers_1.utils.Interface(_abi);\n  }\n\n  static connect(address, signerOrProvider) {\n    return new ethers_1.Contract(address, _abi, signerOrProvider);\n  }\n\n}\n\nexports.Sign_message_lib__factory = Sign_message_lib__factory;\nSign_message_lib__factory.abi = _abi;","map":{"version":3,"sources":["../../../../../../typechain/src/ethers-v5/v1.3.0/factories/Sign_message_lib__factory.ts"],"names":[],"mappings":";AAAA;;AACA;;AACA;;;;;;;AAEA,MAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAOA,MAAM,IAAI,GAAG,CACX;AACE,EAAA,SAAS,EAAE,KADb;AAEE,EAAA,MAAM,EAAE,CACN;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,YAAY,EAAE,SAFhB;AAGE,IAAA,IAAI,EAAE,SAHR;AAIE,IAAA,IAAI,EAAE;AAJR,GADM,CAFV;AAUE,EAAA,IAAI,EAAE,SAVR;AAWE,EAAA,IAAI,EAAE;AAXR,CADW,EAcX;AACE,EAAA,MAAM,EAAE,CACN;AACE,IAAA,YAAY,EAAE,OADhB;AAEE,IAAA,IAAI,EAAE,SAFR;AAGE,IAAA,IAAI,EAAE;AAHR,GADM,CADV;AAQE,EAAA,IAAI,EAAE,gBARR;AASE,EAAA,OAAO,EAAE,CACP;AACE,IAAA,YAAY,EAAE,SADhB;AAEE,IAAA,IAAI,EAAE,EAFR;AAGE,IAAA,IAAI,EAAE;AAHR,GADO,CATX;AAgBE,EAAA,eAAe,EAAE,MAhBnB;AAiBE,EAAA,IAAI,EAAE;AAjBR,CAdW,EAiCX;AACE,EAAA,MAAM,EAAE,CACN;AACE,IAAA,YAAY,EAAE,OADhB;AAEE,IAAA,IAAI,EAAE,OAFR;AAGE,IAAA,IAAI,EAAE;AAHR,GADM,CADV;AAQE,EAAA,IAAI,EAAE,aARR;AASE,EAAA,OAAO,EAAE,EATX;AAUE,EAAA,eAAe,EAAE,YAVnB;AAWE,EAAA,IAAI,EAAE;AAXR,CAjCW,CAAb;;AAgDA,MAAa,yBAAb,CAAsC;AAEd,SAAf,eAAe,GAAA;AACpB,WAAO,IAAI,QAAA,CAAA,KAAA,CAAM,SAAV,CAAoB,IAApB,CAAP;AACD;;AACa,SAAP,OAAO,CACZ,OADY,EAEZ,gBAFY,EAEuB;AAEnC,WAAO,IAAI,QAAA,CAAA,QAAJ,CAAa,OAAb,EAAsB,IAAtB,EAA4B,gBAA5B,CAAP;AACD;;AAVmC;;AAAtC,OAAA,CAAA,yBAAA,GAAA,yBAAA;AACkB,yBAAA,CAAA,GAAA,GAAM,IAAN","sourceRoot":"","sourcesContent":["\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sign_message_lib__factory = void 0;\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"msgHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"SignMsg\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"message\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"getMessageHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"signMessage\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\nclass Sign_message_lib__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.Sign_message_lib__factory = Sign_message_lib__factory;\nSign_message_lib__factory.abi = _abi;\n//# sourceMappingURL=Sign_message_lib__factory.js.map"]},"metadata":{},"sourceType":"script"}