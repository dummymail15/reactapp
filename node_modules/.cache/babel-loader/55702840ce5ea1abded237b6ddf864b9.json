{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _EthersAdapter_ethers, _EthersAdapter_signer, _EthersAdapter_provider;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst abstract_signer_1 = require(\"@ethersproject/abstract-signer\");\n\nconst bignumber_1 = require(\"@ethersproject/bignumber\");\n\nconst safe_core_sdk_utils_1 = require(\"@safe-global/safe-core-sdk-utils\");\n\nconst contractInstancesEthers_1 = require(\"./contracts/contractInstancesEthers\");\n\nconst utils_1 = require(\"./utils\");\n\nclass EthersAdapter {\n  constructor(_ref) {\n    let {\n      ethers,\n      signerOrProvider\n    } = _ref;\n\n    _EthersAdapter_ethers.set(this, void 0);\n\n    _EthersAdapter_signer.set(this, void 0);\n\n    _EthersAdapter_provider.set(this, void 0);\n\n    if (!ethers) {\n      throw new Error('ethers property missing from options');\n    }\n\n    __classPrivateFieldSet(this, _EthersAdapter_ethers, ethers, \"f\");\n\n    const isSigner = signerOrProvider instanceof abstract_signer_1.Signer;\n\n    if (isSigner) {\n      const signer = signerOrProvider;\n\n      if (!signer.provider) {\n        throw new Error('Signer must be connected to a provider');\n      }\n\n      __classPrivateFieldSet(this, _EthersAdapter_provider, signer.provider, \"f\");\n\n      __classPrivateFieldSet(this, _EthersAdapter_signer, signer, \"f\");\n    } else {\n      __classPrivateFieldSet(this, _EthersAdapter_provider, signerOrProvider, \"f\");\n    }\n  }\n\n  getProvider() {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n  }\n\n  getSigner() {\n    return __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\");\n  }\n\n  isAddress(address) {\n    return __classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.isAddress(address);\n  }\n\n  async getEip3770Address(fullAddress) {\n    const chainId = await this.getChainId();\n    return (0, safe_core_sdk_utils_1.validateEip3770Address)(fullAddress, chainId);\n  }\n\n  async getBalance(address, blockTag) {\n    return bignumber_1.BigNumber.from(await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getBalance(address, blockTag));\n  }\n\n  async getNonce(address, blockTag) {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getTransactionCount(address, blockTag);\n  }\n\n  async getChainId() {\n    return (await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getNetwork()).chainId;\n  }\n\n  getChecksummedAddress(address) {\n    return __classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.getAddress(address);\n  }\n\n  getSafeContract(_ref2) {\n    let {\n      safeVersion,\n      chainId,\n      singletonDeployment,\n      customContractAddress\n    } = _ref2;\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n\n    if (!contractAddress) {\n      throw new Error('Invalid SafeProxy contract address');\n    }\n\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n\n    return (0, contractInstancesEthers_1.getSafeContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n\n  getSafeProxyFactoryContract(_ref3) {\n    let {\n      safeVersion,\n      chainId,\n      singletonDeployment,\n      customContractAddress\n    } = _ref3;\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n\n    if (!contractAddress) {\n      throw new Error('Invalid SafeProxyFactory contract address');\n    }\n\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n\n    return (0, contractInstancesEthers_1.getSafeProxyFactoryContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n\n  getMultiSendContract(_ref4) {\n    let {\n      safeVersion,\n      chainId,\n      singletonDeployment,\n      customContractAddress\n    } = _ref4;\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n\n    if (!contractAddress) {\n      throw new Error('Invalid MultiSend contract address');\n    }\n\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n\n    return (0, contractInstancesEthers_1.getMultiSendContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n\n  getMultiSendCallOnlyContract(_ref5) {\n    let {\n      safeVersion,\n      chainId,\n      singletonDeployment,\n      customContractAddress\n    } = _ref5;\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n\n    if (!contractAddress) {\n      throw new Error('Invalid MultiSendCallOnly contract address');\n    }\n\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n\n    return (0, contractInstancesEthers_1.getMultiSendCallOnlyContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n\n  getCompatibilityFallbackHandlerContract(_ref6) {\n    let {\n      safeVersion,\n      chainId,\n      singletonDeployment,\n      customContractAddress\n    } = _ref6;\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n\n    if (!contractAddress) {\n      throw new Error('Invalid CompatibilityFallbackHandler contract address');\n    }\n\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n\n    return (0, contractInstancesEthers_1.getCompatibilityFallbackHandlerContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n\n  getSignMessageLibContract(_ref7) {\n    let {\n      safeVersion,\n      chainId,\n      singletonDeployment,\n      customContractAddress\n    } = _ref7;\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n\n    if (!contractAddress) {\n      throw new Error('Invalid SignMessageLib contract address');\n    }\n\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n\n    return (0, contractInstancesEthers_1.getSignMessageLibContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n\n  getCreateCallContract(_ref8) {\n    let {\n      safeVersion,\n      chainId,\n      singletonDeployment,\n      customContractAddress\n    } = _ref8;\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n\n    if (!contractAddress) {\n      throw new Error('Invalid CreateCall contract address');\n    }\n\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n\n    return (0, contractInstancesEthers_1.getCreateCallContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n\n  async getContractCode(address, blockTag) {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getCode(address, blockTag);\n  }\n\n  async isContractDeployed(address, blockTag) {\n    const contractCode = await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getCode(address, blockTag);\n    return contractCode !== '0x';\n  }\n\n  async getStorageAt(address, position) {\n    const content = await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getStorageAt(address, position);\n    const decodedContent = this.decodeParameters(['address'], content);\n    return decodedContent[0];\n  }\n\n  async getTransaction(transactionHash) {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getTransaction(transactionHash);\n  }\n\n  async getSignerAddress() {\n    var _a;\n\n    return (_a = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")) === null || _a === void 0 ? void 0 : _a.getAddress();\n  }\n\n  signMessage(message) {\n    if (!__classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")) {\n      throw new Error('EthAdapter must be initialized with a signer to use this method');\n    }\n\n    const messageArray = __classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.arrayify(message);\n\n    return __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\").signMessage(messageArray);\n  }\n\n  async signTypedData(safeTransactionEIP712Args) {\n    if (!__classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")) {\n      throw new Error('EthAdapter must be initialized with a signer to use this method');\n    }\n\n    if ((0, utils_1.isTypedDataSigner)(__classPrivateFieldGet(this, _EthersAdapter_signer, \"f\"))) {\n      const typedData = (0, safe_core_sdk_utils_1.generateTypedData)(safeTransactionEIP712Args);\n      const signature = await __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")._signTypedData(typedData.domain, {\n        SafeTx: typedData.types.SafeTx\n      }, typedData.message);\n      return signature;\n    }\n\n    throw new Error('The current signer does not implement EIP-712 to sign typed data');\n  }\n\n  async estimateGas(transaction) {\n    return (await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").estimateGas(transaction)).toNumber();\n  }\n\n  call(transaction, blockTag) {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").call(transaction, blockTag);\n  }\n\n  encodeParameters(types, values) {\n    return new (__classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.AbiCoder)().encode(types, values);\n  }\n\n  decodeParameters(types, values) {\n    return new (__classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.AbiCoder)().decode(types, values);\n  }\n\n}\n\n_EthersAdapter_ethers = new WeakMap(), _EthersAdapter_signer = new WeakMap(), _EthersAdapter_provider = new WeakMap();\nexports.default = EthersAdapter;","map":{"version":3,"sources":["../../src/EthersAdapter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EthersAdapter_ethers, _EthersAdapter_signer, _EthersAdapter_provider;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abstract_signer_1 = require(\"@ethersproject/abstract-signer\");\nconst bignumber_1 = require(\"@ethersproject/bignumber\");\nconst safe_core_sdk_utils_1 = require(\"@safe-global/safe-core-sdk-utils\");\nconst contractInstancesEthers_1 = require(\"./contracts/contractInstancesEthers\");\nconst utils_1 = require(\"./utils\");\nclass EthersAdapter {\n    constructor({ ethers, signerOrProvider }) {\n        _EthersAdapter_ethers.set(this, void 0);\n        _EthersAdapter_signer.set(this, void 0);\n        _EthersAdapter_provider.set(this, void 0);\n        if (!ethers) {\n            throw new Error('ethers property missing from options');\n        }\n        __classPrivateFieldSet(this, _EthersAdapter_ethers, ethers, \"f\");\n        const isSigner = signerOrProvider instanceof abstract_signer_1.Signer;\n        if (isSigner) {\n            const signer = signerOrProvider;\n            if (!signer.provider) {\n                throw new Error('Signer must be connected to a provider');\n            }\n            __classPrivateFieldSet(this, _EthersAdapter_provider, signer.provider, \"f\");\n            __classPrivateFieldSet(this, _EthersAdapter_signer, signer, \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _EthersAdapter_provider, signerOrProvider, \"f\");\n        }\n    }\n    getProvider() {\n        return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    }\n    getSigner() {\n        return __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\");\n    }\n    isAddress(address) {\n        return __classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.isAddress(address);\n    }\n    async getEip3770Address(fullAddress) {\n        const chainId = await this.getChainId();\n        return (0, safe_core_sdk_utils_1.validateEip3770Address)(fullAddress, chainId);\n    }\n    async getBalance(address, blockTag) {\n        return bignumber_1.BigNumber.from(await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getBalance(address, blockTag));\n    }\n    async getNonce(address, blockTag) {\n        return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getTransactionCount(address, blockTag);\n    }\n    async getChainId() {\n        return (await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getNetwork()).chainId;\n    }\n    getChecksummedAddress(address) {\n        return __classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.getAddress(address);\n    }\n    getSafeContract({ safeVersion, chainId, singletonDeployment, customContractAddress }) {\n        const contractAddress = customContractAddress\n            ? customContractAddress\n            : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n        if (!contractAddress) {\n            throw new Error('Invalid SafeProxy contract address');\n        }\n        const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n        return (0, contractInstancesEthers_1.getSafeContractInstance)(safeVersion, contractAddress, signerOrProvider);\n    }\n    getSafeProxyFactoryContract({ safeVersion, chainId, singletonDeployment, customContractAddress }) {\n        const contractAddress = customContractAddress\n            ? customContractAddress\n            : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n        if (!contractAddress) {\n            throw new Error('Invalid SafeProxyFactory contract address');\n        }\n        const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n        return (0, contractInstancesEthers_1.getSafeProxyFactoryContractInstance)(safeVersion, contractAddress, signerOrProvider);\n    }\n    getMultiSendContract({ safeVersion, chainId, singletonDeployment, customContractAddress }) {\n        const contractAddress = customContractAddress\n            ? customContractAddress\n            : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n        if (!contractAddress) {\n            throw new Error('Invalid MultiSend contract address');\n        }\n        const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n        return (0, contractInstancesEthers_1.getMultiSendContractInstance)(safeVersion, contractAddress, signerOrProvider);\n    }\n    getMultiSendCallOnlyContract({ safeVersion, chainId, singletonDeployment, customContractAddress }) {\n        const contractAddress = customContractAddress\n            ? customContractAddress\n            : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n        if (!contractAddress) {\n            throw new Error('Invalid MultiSendCallOnly contract address');\n        }\n        const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n        return (0, contractInstancesEthers_1.getMultiSendCallOnlyContractInstance)(safeVersion, contractAddress, signerOrProvider);\n    }\n    getCompatibilityFallbackHandlerContract({ safeVersion, chainId, singletonDeployment, customContractAddress }) {\n        const contractAddress = customContractAddress\n            ? customContractAddress\n            : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n        if (!contractAddress) {\n            throw new Error('Invalid CompatibilityFallbackHandler contract address');\n        }\n        const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n        return (0, contractInstancesEthers_1.getCompatibilityFallbackHandlerContractInstance)(safeVersion, contractAddress, signerOrProvider);\n    }\n    getSignMessageLibContract({ safeVersion, chainId, singletonDeployment, customContractAddress }) {\n        const contractAddress = customContractAddress\n            ? customContractAddress\n            : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n        if (!contractAddress) {\n            throw new Error('Invalid SignMessageLib contract address');\n        }\n        const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n        return (0, contractInstancesEthers_1.getSignMessageLibContractInstance)(safeVersion, contractAddress, signerOrProvider);\n    }\n    getCreateCallContract({ safeVersion, chainId, singletonDeployment, customContractAddress }) {\n        const contractAddress = customContractAddress\n            ? customContractAddress\n            : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n        if (!contractAddress) {\n            throw new Error('Invalid CreateCall contract address');\n        }\n        const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n        return (0, contractInstancesEthers_1.getCreateCallContractInstance)(safeVersion, contractAddress, signerOrProvider);\n    }\n    async getContractCode(address, blockTag) {\n        return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getCode(address, blockTag);\n    }\n    async isContractDeployed(address, blockTag) {\n        const contractCode = await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getCode(address, blockTag);\n        return contractCode !== '0x';\n    }\n    async getStorageAt(address, position) {\n        const content = await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getStorageAt(address, position);\n        const decodedContent = this.decodeParameters(['address'], content);\n        return decodedContent[0];\n    }\n    async getTransaction(transactionHash) {\n        return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getTransaction(transactionHash);\n    }\n    async getSignerAddress() {\n        var _a;\n        return (_a = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")) === null || _a === void 0 ? void 0 : _a.getAddress();\n    }\n    signMessage(message) {\n        if (!__classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")) {\n            throw new Error('EthAdapter must be initialized with a signer to use this method');\n        }\n        const messageArray = __classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.arrayify(message);\n        return __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\").signMessage(messageArray);\n    }\n    async signTypedData(safeTransactionEIP712Args) {\n        if (!__classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")) {\n            throw new Error('EthAdapter must be initialized with a signer to use this method');\n        }\n        if ((0, utils_1.isTypedDataSigner)(__classPrivateFieldGet(this, _EthersAdapter_signer, \"f\"))) {\n            const typedData = (0, safe_core_sdk_utils_1.generateTypedData)(safeTransactionEIP712Args);\n            const signature = await __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")._signTypedData(typedData.domain, { SafeTx: typedData.types.SafeTx }, typedData.message);\n            return signature;\n        }\n        throw new Error('The current signer does not implement EIP-712 to sign typed data');\n    }\n    async estimateGas(transaction) {\n        return (await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").estimateGas(transaction)).toNumber();\n    }\n    call(transaction, blockTag) {\n        return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").call(transaction, blockTag);\n    }\n    encodeParameters(types, values) {\n        return new (__classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.AbiCoder)().encode(types, values);\n    }\n    decodeParameters(types, values) {\n        return new (__classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.AbiCoder)().decode(types, values);\n    }\n}\n_EthersAdapter_ethers = new WeakMap(), _EthersAdapter_signer = new WeakMap(), _EthersAdapter_provider = new WeakMap();\nexports.default = EthersAdapter;\n//# sourceMappingURL=EthersAdapter.js.map"]},"metadata":{},"sourceType":"script"}