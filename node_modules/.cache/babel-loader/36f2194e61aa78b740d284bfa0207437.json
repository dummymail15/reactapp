{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _ModuleManager_ethAdapter, _ModuleManager_safeContract;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils_1 = require(\"../utils\");\n\nconst constants_1 = require(\"../utils/constants\");\n\nclass ModuleManager {\n  constructor(ethAdapter, safeContract) {\n    _ModuleManager_ethAdapter.set(this, void 0);\n\n    _ModuleManager_safeContract.set(this, void 0);\n\n    __classPrivateFieldSet(this, _ModuleManager_ethAdapter, ethAdapter, \"f\");\n\n    __classPrivateFieldSet(this, _ModuleManager_safeContract, safeContract, \"f\");\n  }\n\n  validateModuleAddress(moduleAddress) {\n    const isValidAddress = __classPrivateFieldGet(this, _ModuleManager_ethAdapter, \"f\").isAddress(moduleAddress);\n\n    if (!isValidAddress || (0, utils_1.isRestrictedAddress)(moduleAddress)) {\n      throw new Error('Invalid module address provided');\n    }\n  }\n\n  validateModuleIsNotEnabled(moduleAddress, modules) {\n    const moduleIndex = modules.findIndex(module => (0, utils_1.sameString)(module, moduleAddress));\n    const isEnabled = moduleIndex >= 0;\n\n    if (isEnabled) {\n      throw new Error('Module provided is already enabled');\n    }\n  }\n\n  validateModuleIsEnabled(moduleAddress, modules) {\n    const moduleIndex = modules.findIndex(module => (0, utils_1.sameString)(module, moduleAddress));\n    const isEnabled = moduleIndex >= 0;\n\n    if (!isEnabled) {\n      throw new Error('Module provided is not enabled yet');\n    }\n\n    return moduleIndex;\n  }\n\n  async getModules() {\n    return __classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\").getModules();\n  }\n\n  async isModuleEnabled(moduleAddress) {\n    return __classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\").isModuleEnabled(moduleAddress);\n  }\n\n  async encodeEnableModuleData(moduleAddress) {\n    this.validateModuleAddress(moduleAddress);\n    const modules = await this.getModules();\n    this.validateModuleIsNotEnabled(moduleAddress, modules);\n    return __classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\").encode('enableModule', [moduleAddress]);\n  }\n\n  async encodeDisableModuleData(moduleAddress) {\n    this.validateModuleAddress(moduleAddress);\n    const modules = await this.getModules();\n    const moduleIndex = this.validateModuleIsEnabled(moduleAddress, modules);\n    const prevModuleAddress = moduleIndex === 0 ? constants_1.SENTINEL_ADDRESS : modules[moduleIndex - 1];\n    return __classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\").encode('disableModule', [prevModuleAddress, moduleAddress]);\n  }\n\n}\n\n_ModuleManager_ethAdapter = new WeakMap(), _ModuleManager_safeContract = new WeakMap();\nexports.default = ModuleManager;","map":{"version":3,"sources":["../../../src/managers/moduleManager.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ModuleManager_ethAdapter, _ModuleManager_safeContract;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../utils/constants\");\nclass ModuleManager {\n    constructor(ethAdapter, safeContract) {\n        _ModuleManager_ethAdapter.set(this, void 0);\n        _ModuleManager_safeContract.set(this, void 0);\n        __classPrivateFieldSet(this, _ModuleManager_ethAdapter, ethAdapter, \"f\");\n        __classPrivateFieldSet(this, _ModuleManager_safeContract, safeContract, \"f\");\n    }\n    validateModuleAddress(moduleAddress) {\n        const isValidAddress = __classPrivateFieldGet(this, _ModuleManager_ethAdapter, \"f\").isAddress(moduleAddress);\n        if (!isValidAddress || (0, utils_1.isRestrictedAddress)(moduleAddress)) {\n            throw new Error('Invalid module address provided');\n        }\n    }\n    validateModuleIsNotEnabled(moduleAddress, modules) {\n        const moduleIndex = modules.findIndex((module) => (0, utils_1.sameString)(module, moduleAddress));\n        const isEnabled = moduleIndex >= 0;\n        if (isEnabled) {\n            throw new Error('Module provided is already enabled');\n        }\n    }\n    validateModuleIsEnabled(moduleAddress, modules) {\n        const moduleIndex = modules.findIndex((module) => (0, utils_1.sameString)(module, moduleAddress));\n        const isEnabled = moduleIndex >= 0;\n        if (!isEnabled) {\n            throw new Error('Module provided is not enabled yet');\n        }\n        return moduleIndex;\n    }\n    async getModules() {\n        return __classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\").getModules();\n    }\n    async isModuleEnabled(moduleAddress) {\n        return __classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\").isModuleEnabled(moduleAddress);\n    }\n    async encodeEnableModuleData(moduleAddress) {\n        this.validateModuleAddress(moduleAddress);\n        const modules = await this.getModules();\n        this.validateModuleIsNotEnabled(moduleAddress, modules);\n        return __classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\").encode('enableModule', [moduleAddress]);\n    }\n    async encodeDisableModuleData(moduleAddress) {\n        this.validateModuleAddress(moduleAddress);\n        const modules = await this.getModules();\n        const moduleIndex = this.validateModuleIsEnabled(moduleAddress, modules);\n        const prevModuleAddress = moduleIndex === 0 ? constants_1.SENTINEL_ADDRESS : modules[moduleIndex - 1];\n        return __classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\").encode('disableModule', [prevModuleAddress, moduleAddress]);\n    }\n}\n_ModuleManager_ethAdapter = new WeakMap(), _ModuleManager_safeContract = new WeakMap();\nexports.default = ModuleManager;\n//# sourceMappingURL=moduleManager.js.map"]},"metadata":{},"sourceType":"script"}