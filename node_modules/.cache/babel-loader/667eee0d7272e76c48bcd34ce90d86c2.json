{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _ContractManager_contractNetworks, _ContractManager_isL1SafeMasterCopy, _ContractManager_safeContract, _ContractManager_multiSendContract, _ContractManager_multiSendCallOnlyContract;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst config_1 = require(\"../contracts/config\");\n\nconst safeDeploymentContracts_1 = require(\"../contracts/safeDeploymentContracts\");\n\nclass ContractManager {\n  constructor() {\n    _ContractManager_contractNetworks.set(this, void 0);\n\n    _ContractManager_isL1SafeMasterCopy.set(this, void 0);\n\n    _ContractManager_safeContract.set(this, void 0);\n\n    _ContractManager_multiSendContract.set(this, void 0);\n\n    _ContractManager_multiSendCallOnlyContract.set(this, void 0);\n  }\n\n  static async create(_ref) {\n    let {\n      ethAdapter,\n      safeAddress,\n      isL1SafeMasterCopy,\n      contractNetworks\n    } = _ref;\n    const contractManager = new ContractManager();\n    await contractManager.init({\n      ethAdapter,\n      safeAddress,\n      isL1SafeMasterCopy,\n      contractNetworks\n    });\n    return contractManager;\n  }\n\n  async init(_ref2) {\n    let {\n      ethAdapter,\n      safeAddress,\n      isL1SafeMasterCopy,\n      contractNetworks\n    } = _ref2;\n    const chainId = await ethAdapter.getChainId();\n    const customContracts = contractNetworks === null || contractNetworks === void 0 ? void 0 : contractNetworks[chainId];\n\n    __classPrivateFieldSet(this, _ContractManager_contractNetworks, contractNetworks, \"f\");\n\n    __classPrivateFieldSet(this, _ContractManager_isL1SafeMasterCopy, isL1SafeMasterCopy, \"f\");\n\n    const temporarySafeContract = await (0, safeDeploymentContracts_1.getSafeContract)({\n      ethAdapter,\n      safeVersion: config_1.SAFE_LAST_VERSION,\n      chainId,\n      isL1SafeMasterCopy,\n      customSafeAddress: safeAddress,\n      customContracts\n    });\n    const safeVersion = await temporarySafeContract.getVersion();\n\n    __classPrivateFieldSet(this, _ContractManager_safeContract, await (0, safeDeploymentContracts_1.getSafeContract)({\n      ethAdapter,\n      safeVersion,\n      chainId,\n      isL1SafeMasterCopy,\n      customSafeAddress: safeAddress,\n      customContracts\n    }), \"f\");\n\n    __classPrivateFieldSet(this, _ContractManager_multiSendContract, await (0, safeDeploymentContracts_1.getMultiSendContract)({\n      ethAdapter,\n      safeVersion,\n      chainId,\n      customContracts\n    }), \"f\");\n\n    __classPrivateFieldSet(this, _ContractManager_multiSendCallOnlyContract, await (0, safeDeploymentContracts_1.getMultiSendCallOnlyContract)({\n      ethAdapter,\n      safeVersion,\n      chainId,\n      customContracts\n    }), \"f\");\n  }\n\n  get contractNetworks() {\n    return __classPrivateFieldGet(this, _ContractManager_contractNetworks, \"f\");\n  }\n\n  get isL1SafeMasterCopy() {\n    return __classPrivateFieldGet(this, _ContractManager_isL1SafeMasterCopy, \"f\");\n  }\n\n  get safeContract() {\n    return __classPrivateFieldGet(this, _ContractManager_safeContract, \"f\");\n  }\n\n  get multiSendContract() {\n    return __classPrivateFieldGet(this, _ContractManager_multiSendContract, \"f\");\n  }\n\n  get multiSendCallOnlyContract() {\n    return __classPrivateFieldGet(this, _ContractManager_multiSendCallOnlyContract, \"f\");\n  }\n\n}\n\n_ContractManager_contractNetworks = new WeakMap(), _ContractManager_isL1SafeMasterCopy = new WeakMap(), _ContractManager_safeContract = new WeakMap(), _ContractManager_multiSendContract = new WeakMap(), _ContractManager_multiSendCallOnlyContract = new WeakMap();\nexports.default = ContractManager;","map":{"version":3,"sources":["../../../src/managers/contractManager.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ContractManager_contractNetworks, _ContractManager_isL1SafeMasterCopy, _ContractManager_safeContract, _ContractManager_multiSendContract, _ContractManager_multiSendCallOnlyContract;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst config_1 = require(\"../contracts/config\");\nconst safeDeploymentContracts_1 = require(\"../contracts/safeDeploymentContracts\");\nclass ContractManager {\n    constructor() {\n        _ContractManager_contractNetworks.set(this, void 0);\n        _ContractManager_isL1SafeMasterCopy.set(this, void 0);\n        _ContractManager_safeContract.set(this, void 0);\n        _ContractManager_multiSendContract.set(this, void 0);\n        _ContractManager_multiSendCallOnlyContract.set(this, void 0);\n    }\n    static async create({ ethAdapter, safeAddress, isL1SafeMasterCopy, contractNetworks }) {\n        const contractManager = new ContractManager();\n        await contractManager.init({ ethAdapter, safeAddress, isL1SafeMasterCopy, contractNetworks });\n        return contractManager;\n    }\n    async init({ ethAdapter, safeAddress, isL1SafeMasterCopy, contractNetworks }) {\n        const chainId = await ethAdapter.getChainId();\n        const customContracts = contractNetworks === null || contractNetworks === void 0 ? void 0 : contractNetworks[chainId];\n        __classPrivateFieldSet(this, _ContractManager_contractNetworks, contractNetworks, \"f\");\n        __classPrivateFieldSet(this, _ContractManager_isL1SafeMasterCopy, isL1SafeMasterCopy, \"f\");\n        const temporarySafeContract = await (0, safeDeploymentContracts_1.getSafeContract)({\n            ethAdapter,\n            safeVersion: config_1.SAFE_LAST_VERSION,\n            chainId,\n            isL1SafeMasterCopy,\n            customSafeAddress: safeAddress,\n            customContracts\n        });\n        const safeVersion = await temporarySafeContract.getVersion();\n        __classPrivateFieldSet(this, _ContractManager_safeContract, await (0, safeDeploymentContracts_1.getSafeContract)({\n            ethAdapter,\n            safeVersion,\n            chainId,\n            isL1SafeMasterCopy,\n            customSafeAddress: safeAddress,\n            customContracts\n        }), \"f\");\n        __classPrivateFieldSet(this, _ContractManager_multiSendContract, await (0, safeDeploymentContracts_1.getMultiSendContract)({\n            ethAdapter,\n            safeVersion,\n            chainId,\n            customContracts\n        }), \"f\");\n        __classPrivateFieldSet(this, _ContractManager_multiSendCallOnlyContract, await (0, safeDeploymentContracts_1.getMultiSendCallOnlyContract)({\n            ethAdapter,\n            safeVersion,\n            chainId,\n            customContracts\n        }), \"f\");\n    }\n    get contractNetworks() {\n        return __classPrivateFieldGet(this, _ContractManager_contractNetworks, \"f\");\n    }\n    get isL1SafeMasterCopy() {\n        return __classPrivateFieldGet(this, _ContractManager_isL1SafeMasterCopy, \"f\");\n    }\n    get safeContract() {\n        return __classPrivateFieldGet(this, _ContractManager_safeContract, \"f\");\n    }\n    get multiSendContract() {\n        return __classPrivateFieldGet(this, _ContractManager_multiSendContract, \"f\");\n    }\n    get multiSendCallOnlyContract() {\n        return __classPrivateFieldGet(this, _ContractManager_multiSendCallOnlyContract, \"f\");\n    }\n}\n_ContractManager_contractNetworks = new WeakMap(), _ContractManager_isL1SafeMasterCopy = new WeakMap(), _ContractManager_safeContract = new WeakMap(), _ContractManager_multiSendContract = new WeakMap(), _ContractManager_multiSendCallOnlyContract = new WeakMap();\nexports.default = ContractManager;\n//# sourceMappingURL=contractManager.js.map"]},"metadata":{},"sourceType":"script"}