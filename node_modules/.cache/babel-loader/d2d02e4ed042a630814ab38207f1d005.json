{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _GuardManager_ethAdapter, _GuardManager_safeContract, _GuardManager_slot;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils_1 = require(\"../utils\");\n\nconst constants_1 = require(\"../utils/constants\");\n\nconst safeVersions_1 = require(\"../utils/safeVersions\");\n\nclass GuardManager {\n  constructor(ethAdapter, safeContract) {\n    _GuardManager_ethAdapter.set(this, void 0);\n\n    _GuardManager_safeContract.set(this, void 0); // keccak256(\"guard_manager.guard.address\")\n\n\n    _GuardManager_slot.set(this, '0x4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c8');\n\n    __classPrivateFieldSet(this, _GuardManager_ethAdapter, ethAdapter, \"f\");\n\n    __classPrivateFieldSet(this, _GuardManager_safeContract, safeContract, \"f\");\n  }\n\n  validateGuardAddress(guardAddress) {\n    const isValidAddress = __classPrivateFieldGet(this, _GuardManager_ethAdapter, \"f\").isAddress(guardAddress);\n\n    if (!isValidAddress || (0, utils_1.isZeroAddress)(guardAddress)) {\n      throw new Error('Invalid guard address provided');\n    }\n  }\n\n  validateGuardIsNotEnabled(currentGuard, newGuardAddress) {\n    if ((0, utils_1.sameString)(currentGuard, newGuardAddress)) {\n      throw new Error('Guard provided is already enabled');\n    }\n  }\n\n  validateGuardIsEnabled(guardAddress) {\n    if ((0, utils_1.isZeroAddress)(guardAddress)) {\n      throw new Error('There is no guard enabled yet');\n    }\n  }\n\n  async getGuard() {\n    const safeVersion = await __classPrivateFieldGet(this, _GuardManager_safeContract, \"f\").getVersion();\n\n    if ((0, safeVersions_1.hasFeature)(safeVersions_1.FEATURES.SAFE_TX_GUARDS, safeVersion)) {\n      return __classPrivateFieldGet(this, _GuardManager_ethAdapter, \"f\").getStorageAt(__classPrivateFieldGet(this, _GuardManager_safeContract, \"f\").getAddress(), __classPrivateFieldGet(this, _GuardManager_slot, \"f\"));\n    } else {\n      throw new Error('Current version of the Safe does not support Safe transaction guards functionality');\n    }\n  }\n\n  async encodeEnableGuardData(guardAddress) {\n    this.validateGuardAddress(guardAddress);\n    const currentGuard = await this.getGuard();\n    this.validateGuardIsNotEnabled(currentGuard, guardAddress);\n    return __classPrivateFieldGet(this, _GuardManager_safeContract, \"f\").encode('setGuard', [guardAddress]);\n  }\n\n  async encodeDisableGuardData() {\n    const currentGuard = await this.getGuard();\n    this.validateGuardIsEnabled(currentGuard);\n    return __classPrivateFieldGet(this, _GuardManager_safeContract, \"f\").encode('setGuard', [constants_1.ZERO_ADDRESS]);\n  }\n\n}\n\n_GuardManager_ethAdapter = new WeakMap(), _GuardManager_safeContract = new WeakMap(), _GuardManager_slot = new WeakMap();\nexports.default = GuardManager;","map":{"version":3,"sources":["../../../src/managers/guardManager.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _GuardManager_ethAdapter, _GuardManager_safeContract, _GuardManager_slot;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../utils/constants\");\nconst safeVersions_1 = require(\"../utils/safeVersions\");\nclass GuardManager {\n    constructor(ethAdapter, safeContract) {\n        _GuardManager_ethAdapter.set(this, void 0);\n        _GuardManager_safeContract.set(this, void 0);\n        // keccak256(\"guard_manager.guard.address\")\n        _GuardManager_slot.set(this, '0x4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c8');\n        __classPrivateFieldSet(this, _GuardManager_ethAdapter, ethAdapter, \"f\");\n        __classPrivateFieldSet(this, _GuardManager_safeContract, safeContract, \"f\");\n    }\n    validateGuardAddress(guardAddress) {\n        const isValidAddress = __classPrivateFieldGet(this, _GuardManager_ethAdapter, \"f\").isAddress(guardAddress);\n        if (!isValidAddress || (0, utils_1.isZeroAddress)(guardAddress)) {\n            throw new Error('Invalid guard address provided');\n        }\n    }\n    validateGuardIsNotEnabled(currentGuard, newGuardAddress) {\n        if ((0, utils_1.sameString)(currentGuard, newGuardAddress)) {\n            throw new Error('Guard provided is already enabled');\n        }\n    }\n    validateGuardIsEnabled(guardAddress) {\n        if ((0, utils_1.isZeroAddress)(guardAddress)) {\n            throw new Error('There is no guard enabled yet');\n        }\n    }\n    async getGuard() {\n        const safeVersion = await __classPrivateFieldGet(this, _GuardManager_safeContract, \"f\").getVersion();\n        if ((0, safeVersions_1.hasFeature)(safeVersions_1.FEATURES.SAFE_TX_GUARDS, safeVersion)) {\n            return __classPrivateFieldGet(this, _GuardManager_ethAdapter, \"f\").getStorageAt(__classPrivateFieldGet(this, _GuardManager_safeContract, \"f\").getAddress(), __classPrivateFieldGet(this, _GuardManager_slot, \"f\"));\n        }\n        else {\n            throw new Error('Current version of the Safe does not support Safe transaction guards functionality');\n        }\n    }\n    async encodeEnableGuardData(guardAddress) {\n        this.validateGuardAddress(guardAddress);\n        const currentGuard = await this.getGuard();\n        this.validateGuardIsNotEnabled(currentGuard, guardAddress);\n        return __classPrivateFieldGet(this, _GuardManager_safeContract, \"f\").encode('setGuard', [guardAddress]);\n    }\n    async encodeDisableGuardData() {\n        const currentGuard = await this.getGuard();\n        this.validateGuardIsEnabled(currentGuard);\n        return __classPrivateFieldGet(this, _GuardManager_safeContract, \"f\").encode('setGuard', [constants_1.ZERO_ADDRESS]);\n    }\n}\n_GuardManager_ethAdapter = new WeakMap(), _GuardManager_safeContract = new WeakMap(), _GuardManager_slot = new WeakMap();\nexports.default = GuardManager;\n//# sourceMappingURL=guardManager.js.map"]},"metadata":{},"sourceType":"script"}