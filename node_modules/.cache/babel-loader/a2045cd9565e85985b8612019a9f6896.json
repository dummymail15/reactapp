{"ast":null,"code":"\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n\n/* tslint:disable */\n\n/* eslint-disable */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Multi_send__factory = void 0;\n\nconst ethers_1 = require(\"ethers\");\n\nconst _abi = [{\n  inputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"constructor\"\n}, {\n  inputs: [{\n    internalType: \"bytes\",\n    name: \"transactions\",\n    type: \"bytes\"\n  }],\n  name: \"multiSend\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\"\n}];\n\nclass Multi_send__factory {\n  static createInterface() {\n    return new ethers_1.utils.Interface(_abi);\n  }\n\n  static connect(address, signerOrProvider) {\n    return new ethers_1.Contract(address, _abi, signerOrProvider);\n  }\n\n}\n\nexports.Multi_send__factory = Multi_send__factory;\nMulti_send__factory.abi = _abi;","map":{"version":3,"sources":["../../../../../../typechain/src/ethers-v5/v1.3.0/factories/Multi_send__factory.ts"],"names":[],"mappings":";AAAA;;AACA;;AACA;;;;;;;AAEA,MAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAIA,MAAM,IAAI,GAAG,CACX;AACE,EAAA,MAAM,EAAE,EADV;AAEE,EAAA,eAAe,EAAE,YAFnB;AAGE,EAAA,IAAI,EAAE;AAHR,CADW,EAMX;AACE,EAAA,MAAM,EAAE,CACN;AACE,IAAA,YAAY,EAAE,OADhB;AAEE,IAAA,IAAI,EAAE,cAFR;AAGE,IAAA,IAAI,EAAE;AAHR,GADM,CADV;AAQE,EAAA,IAAI,EAAE,WARR;AASE,EAAA,OAAO,EAAE,EATX;AAUE,EAAA,eAAe,EAAE,SAVnB;AAWE,EAAA,IAAI,EAAE;AAXR,CANW,CAAb;;AAqBA,MAAa,mBAAb,CAAgC;AAER,SAAf,eAAe,GAAA;AACpB,WAAO,IAAI,QAAA,CAAA,KAAA,CAAM,SAAV,CAAoB,IAApB,CAAP;AACD;;AACa,SAAP,OAAO,CACZ,OADY,EAEZ,gBAFY,EAEuB;AAEnC,WAAO,IAAI,QAAA,CAAA,QAAJ,CAAa,OAAb,EAAsB,IAAtB,EAA4B,gBAA5B,CAAP;AACD;;AAV6B;;AAAhC,OAAA,CAAA,mBAAA,GAAA,mBAAA;AACkB,mBAAA,CAAA,GAAA,GAAM,IAAN","sourceRoot":"","sourcesContent":["\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Multi_send__factory = void 0;\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        inputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"transactions\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"multiSend\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n];\nclass Multi_send__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.Multi_send__factory = Multi_send__factory;\nMulti_send__factory.abi = _abi;\n//# sourceMappingURL=Multi_send__factory.js.map"]},"metadata":{},"sourceType":"script"}