{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/ravi/coinflip/coin-flip-test-main/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/ravi/coinflip/coin-flip-test-main/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCreateCallContract = exports.getSignMessageLibContract = exports.getMultiSendCallOnlyContract = exports.getMultiSendContract = exports.getCompatibilityFallbackHandlerContract = exports.getProxyFactoryContract = exports.getSafeContract = exports.getCreateCallContractDeployment = exports.getSignMessageLibContractDeployment = exports.getSafeProxyFactoryContractDeployment = exports.getMultiSendContractDeployment = exports.getMultiSendCallOnlyContractDeployment = exports.getCompatibilityFallbackHandlerContractDeployment = exports.getSafeContractDeployment = void 0;\n\nvar safe_deployments_1 = require(\"@gnosis.pm/safe-deployments\");\n\nvar config_1 = require(\"./config\");\n\nfunction getSafeContractDeployment(safeVersion, chainId) {\n  var isL1SafeMasterCopy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var version = config_1.safeDeploymentsVersions[safeVersion].safeMasterCopyVersion;\n  var filters = {\n    version: version,\n    network: chainId.toString(),\n    released: true\n  };\n\n  if (config_1.safeDeploymentsL1ChainIds.includes(chainId) || isL1SafeMasterCopy) {\n    return (0, safe_deployments_1.getSafeSingletonDeployment)(filters);\n  }\n\n  return (0, safe_deployments_1.getSafeL2SingletonDeployment)(filters);\n}\n\nexports.getSafeContractDeployment = getSafeContractDeployment;\n\nfunction getCompatibilityFallbackHandlerContractDeployment(safeVersion, chainId) {\n  var version = config_1.safeDeploymentsVersions[safeVersion].compatibilityFallbackHandler;\n  return (0, safe_deployments_1.getCompatibilityFallbackHandlerDeployment)({\n    version: version,\n    network: chainId.toString(),\n    released: true\n  });\n}\n\nexports.getCompatibilityFallbackHandlerContractDeployment = getCompatibilityFallbackHandlerContractDeployment;\n\nfunction getMultiSendCallOnlyContractDeployment(safeVersion, chainId) {\n  var version = config_1.safeDeploymentsVersions[safeVersion].multiSendCallOnlyVersion;\n  return (0, safe_deployments_1.getMultiSendCallOnlyDeployment)({\n    version: version,\n    network: chainId.toString(),\n    released: true\n  });\n}\n\nexports.getMultiSendCallOnlyContractDeployment = getMultiSendCallOnlyContractDeployment;\n\nfunction getMultiSendContractDeployment(safeVersion, chainId) {\n  var version = config_1.safeDeploymentsVersions[safeVersion].multiSendVersion;\n  return (0, safe_deployments_1.getMultiSendDeployment)({\n    version: version,\n    network: chainId.toString(),\n    released: true\n  });\n}\n\nexports.getMultiSendContractDeployment = getMultiSendContractDeployment;\n\nfunction getSafeProxyFactoryContractDeployment(safeVersion, chainId) {\n  var version = config_1.safeDeploymentsVersions[safeVersion].safeProxyFactoryVersion;\n  return (0, safe_deployments_1.getProxyFactoryDeployment)({\n    version: version,\n    network: chainId.toString(),\n    released: true\n  });\n}\n\nexports.getSafeProxyFactoryContractDeployment = getSafeProxyFactoryContractDeployment;\n\nfunction getSignMessageLibContractDeployment(safeVersion, chainId) {\n  var version = config_1.safeDeploymentsVersions[safeVersion].signMessageLibVersion;\n  return (0, safe_deployments_1.getSignMessageLibDeployment)({\n    version: version,\n    network: chainId.toString(),\n    released: true\n  });\n}\n\nexports.getSignMessageLibContractDeployment = getSignMessageLibContractDeployment;\n\nfunction getCreateCallContractDeployment(safeVersion, chainId) {\n  var version = config_1.safeDeploymentsVersions[safeVersion].createCallVersion;\n  return (0, safe_deployments_1.getCreateCallDeployment)({\n    version: version,\n    network: chainId.toString(),\n    released: true\n  });\n}\n\nexports.getCreateCallContractDeployment = getCreateCallContractDeployment;\n\nfunction getSafeContract(_x) {\n  return _getSafeContract.apply(this, arguments);\n}\n\nfunction _getSafeContract() {\n  _getSafeContract = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var ethAdapter, safeVersion, chainId, customSafeAddress, isL1SafeMasterCopy, customContracts, singletonDeployment, gnosisSafeContract, isContractDeployed;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ethAdapter = _ref.ethAdapter, safeVersion = _ref.safeVersion, chainId = _ref.chainId, customSafeAddress = _ref.customSafeAddress, isL1SafeMasterCopy = _ref.isL1SafeMasterCopy, customContracts = _ref.customContracts;\n            singletonDeployment = getSafeContractDeployment(safeVersion, chainId, isL1SafeMasterCopy);\n            gnosisSafeContract = ethAdapter.getSafeContract({\n              safeVersion: safeVersion,\n              chainId: chainId,\n              singletonDeployment: singletonDeployment,\n              customContractAddress: customSafeAddress !== null && customSafeAddress !== void 0 ? customSafeAddress : customContracts === null || customContracts === void 0 ? void 0 : customContracts.safeMasterCopyAddress,\n              customContractAbi: customContracts === null || customContracts === void 0 ? void 0 : customContracts.safeMasterCopyAbi\n            });\n            _context.next = 5;\n            return ethAdapter.isContractDeployed(gnosisSafeContract.getAddress());\n\n          case 5:\n            isContractDeployed = _context.sent;\n\n            if (isContractDeployed) {\n              _context.next = 8;\n              break;\n            }\n\n            throw new Error('SafeProxy contract is not deployed on the current network');\n\n          case 8:\n            return _context.abrupt(\"return\", gnosisSafeContract);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getSafeContract.apply(this, arguments);\n}\n\nexports.getSafeContract = getSafeContract;\n\nfunction getProxyFactoryContract(_x2) {\n  return _getProxyFactoryContract.apply(this, arguments);\n}\n\nfunction _getProxyFactoryContract() {\n  _getProxyFactoryContract = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var ethAdapter, safeVersion, chainId, customContracts, proxyFactoryDeployment, safeProxyFactoryContract, isContractDeployed;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            ethAdapter = _ref2.ethAdapter, safeVersion = _ref2.safeVersion, chainId = _ref2.chainId, customContracts = _ref2.customContracts;\n            proxyFactoryDeployment = getSafeProxyFactoryContractDeployment(safeVersion, chainId);\n            _context2.next = 4;\n            return ethAdapter.getSafeProxyFactoryContract({\n              safeVersion: safeVersion,\n              chainId: chainId,\n              singletonDeployment: proxyFactoryDeployment,\n              customContractAddress: customContracts === null || customContracts === void 0 ? void 0 : customContracts.safeProxyFactoryAddress,\n              customContractAbi: customContracts === null || customContracts === void 0 ? void 0 : customContracts.safeProxyFactoryAbi\n            });\n\n          case 4:\n            safeProxyFactoryContract = _context2.sent;\n            _context2.next = 7;\n            return ethAdapter.isContractDeployed(safeProxyFactoryContract.getAddress());\n\n          case 7:\n            isContractDeployed = _context2.sent;\n\n            if (isContractDeployed) {\n              _context2.next = 10;\n              break;\n            }\n\n            throw new Error('SafeProxyFactory contract is not deployed on the current network');\n\n          case 10:\n            return _context2.abrupt(\"return\", safeProxyFactoryContract);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getProxyFactoryContract.apply(this, arguments);\n}\n\nexports.getProxyFactoryContract = getProxyFactoryContract;\n\nfunction getCompatibilityFallbackHandlerContract(_x3) {\n  return _getCompatibilityFallbackHandlerContract.apply(this, arguments);\n}\n\nfunction _getCompatibilityFallbackHandlerContract() {\n  _getCompatibilityFallbackHandlerContract = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref3) {\n    var ethAdapter, safeVersion, chainId, customContracts, fallbackHandlerDeployment, fallbackHandlerContract, isContractDeployed;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            ethAdapter = _ref3.ethAdapter, safeVersion = _ref3.safeVersion, chainId = _ref3.chainId, customContracts = _ref3.customContracts;\n            fallbackHandlerDeployment = getCompatibilityFallbackHandlerContractDeployment(safeVersion, chainId);\n            _context3.next = 4;\n            return ethAdapter.getCompatibilityFallbackHandlerContract({\n              safeVersion: safeVersion,\n              chainId: chainId,\n              singletonDeployment: fallbackHandlerDeployment,\n              customContractAddress: customContracts === null || customContracts === void 0 ? void 0 : customContracts.fallbackHandlerAddress,\n              customContractAbi: customContracts === null || customContracts === void 0 ? void 0 : customContracts.fallbackHandlerAbi\n            });\n\n          case 4:\n            fallbackHandlerContract = _context3.sent;\n            _context3.next = 7;\n            return ethAdapter.isContractDeployed(fallbackHandlerContract.getAddress());\n\n          case 7:\n            isContractDeployed = _context3.sent;\n\n            if (isContractDeployed) {\n              _context3.next = 10;\n              break;\n            }\n\n            throw new Error('CompatibilityFallbackHandler contract is not deployed on the current network');\n\n          case 10:\n            return _context3.abrupt(\"return\", fallbackHandlerContract);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getCompatibilityFallbackHandlerContract.apply(this, arguments);\n}\n\nexports.getCompatibilityFallbackHandlerContract = getCompatibilityFallbackHandlerContract;\n\nfunction getMultiSendContract(_x4) {\n  return _getMultiSendContract.apply(this, arguments);\n}\n\nfunction _getMultiSendContract() {\n  _getMultiSendContract = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref4) {\n    var ethAdapter, safeVersion, chainId, customContracts, multiSendDeployment, multiSendContract, isContractDeployed;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            ethAdapter = _ref4.ethAdapter, safeVersion = _ref4.safeVersion, chainId = _ref4.chainId, customContracts = _ref4.customContracts;\n            multiSendDeployment = getMultiSendContractDeployment(safeVersion, chainId);\n            _context4.next = 4;\n            return ethAdapter.getMultiSendContract({\n              safeVersion: safeVersion,\n              chainId: chainId,\n              singletonDeployment: multiSendDeployment,\n              customContractAddress: customContracts === null || customContracts === void 0 ? void 0 : customContracts.multiSendAddress,\n              customContractAbi: customContracts === null || customContracts === void 0 ? void 0 : customContracts.multiSendAbi\n            });\n\n          case 4:\n            multiSendContract = _context4.sent;\n            _context4.next = 7;\n            return ethAdapter.isContractDeployed(multiSendContract.getAddress());\n\n          case 7:\n            isContractDeployed = _context4.sent;\n\n            if (isContractDeployed) {\n              _context4.next = 10;\n              break;\n            }\n\n            throw new Error('MultiSend contract is not deployed on the current network');\n\n          case 10:\n            return _context4.abrupt(\"return\", multiSendContract);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getMultiSendContract.apply(this, arguments);\n}\n\nexports.getMultiSendContract = getMultiSendContract;\n\nfunction getMultiSendCallOnlyContract(_x5) {\n  return _getMultiSendCallOnlyContract.apply(this, arguments);\n}\n\nfunction _getMultiSendCallOnlyContract() {\n  _getMultiSendCallOnlyContract = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref5) {\n    var ethAdapter, safeVersion, chainId, customContracts, multiSendCallOnlyDeployment, multiSendCallOnlyContract, isContractDeployed;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            ethAdapter = _ref5.ethAdapter, safeVersion = _ref5.safeVersion, chainId = _ref5.chainId, customContracts = _ref5.customContracts;\n            multiSendCallOnlyDeployment = getMultiSendCallOnlyContractDeployment(safeVersion, chainId);\n            _context5.next = 4;\n            return ethAdapter.getMultiSendCallOnlyContract({\n              safeVersion: safeVersion,\n              chainId: chainId,\n              singletonDeployment: multiSendCallOnlyDeployment,\n              customContractAddress: customContracts === null || customContracts === void 0 ? void 0 : customContracts.multiSendCallOnlyAddress,\n              customContractAbi: customContracts === null || customContracts === void 0 ? void 0 : customContracts.multiSendCallOnlyAbi\n            });\n\n          case 4:\n            multiSendCallOnlyContract = _context5.sent;\n            _context5.next = 7;\n            return ethAdapter.isContractDeployed(multiSendCallOnlyContract.getAddress());\n\n          case 7:\n            isContractDeployed = _context5.sent;\n\n            if (isContractDeployed) {\n              _context5.next = 10;\n              break;\n            }\n\n            throw new Error('MultiSendCallOnly contract is not deployed on the current network');\n\n          case 10:\n            return _context5.abrupt(\"return\", multiSendCallOnlyContract);\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getMultiSendCallOnlyContract.apply(this, arguments);\n}\n\nexports.getMultiSendCallOnlyContract = getMultiSendCallOnlyContract;\n\nfunction getSignMessageLibContract(_x6) {\n  return _getSignMessageLibContract.apply(this, arguments);\n}\n\nfunction _getSignMessageLibContract() {\n  _getSignMessageLibContract = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(_ref6) {\n    var ethAdapter, safeVersion, chainId, customContracts, signMessageLibDeployment, signMessageLibContract, isContractDeployed;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            ethAdapter = _ref6.ethAdapter, safeVersion = _ref6.safeVersion, chainId = _ref6.chainId, customContracts = _ref6.customContracts;\n            signMessageLibDeployment = getSignMessageLibContractDeployment(safeVersion, chainId);\n            _context6.next = 4;\n            return ethAdapter.getSignMessageLibContract({\n              safeVersion: safeVersion,\n              chainId: chainId,\n              singletonDeployment: signMessageLibDeployment,\n              customContractAddress: customContracts === null || customContracts === void 0 ? void 0 : customContracts.signMessageLibAddress,\n              customContractAbi: customContracts === null || customContracts === void 0 ? void 0 : customContracts.signMessageLibAbi\n            });\n\n          case 4:\n            signMessageLibContract = _context6.sent;\n            _context6.next = 7;\n            return ethAdapter.isContractDeployed(signMessageLibContract.getAddress());\n\n          case 7:\n            isContractDeployed = _context6.sent;\n\n            if (isContractDeployed) {\n              _context6.next = 10;\n              break;\n            }\n\n            throw new Error('SignMessageLib contract is not deployed on the current network');\n\n          case 10:\n            return _context6.abrupt(\"return\", signMessageLibContract);\n\n          case 11:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _getSignMessageLibContract.apply(this, arguments);\n}\n\nexports.getSignMessageLibContract = getSignMessageLibContract;\n\nfunction getCreateCallContract(_x7) {\n  return _getCreateCallContract.apply(this, arguments);\n}\n\nfunction _getCreateCallContract() {\n  _getCreateCallContract = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_ref7) {\n    var ethAdapter, safeVersion, chainId, customContracts, createCallDeployment, createCallContract, isContractDeployed;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            ethAdapter = _ref7.ethAdapter, safeVersion = _ref7.safeVersion, chainId = _ref7.chainId, customContracts = _ref7.customContracts;\n            createCallDeployment = getCreateCallContractDeployment(safeVersion, chainId);\n            _context7.next = 4;\n            return ethAdapter.getCreateCallContract({\n              safeVersion: safeVersion,\n              chainId: chainId,\n              singletonDeployment: createCallDeployment,\n              customContractAddress: customContracts === null || customContracts === void 0 ? void 0 : customContracts.createCallAddress,\n              customContractAbi: customContracts === null || customContracts === void 0 ? void 0 : customContracts.createCallAbi\n            });\n\n          case 4:\n            createCallContract = _context7.sent;\n            _context7.next = 7;\n            return ethAdapter.isContractDeployed(createCallContract.getAddress());\n\n          case 7:\n            isContractDeployed = _context7.sent;\n\n            if (isContractDeployed) {\n              _context7.next = 10;\n              break;\n            }\n\n            throw new Error('CreateCall contract is not deployed on the current network');\n\n          case 10:\n            return _context7.abrupt(\"return\", createCallContract);\n\n          case 11:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getCreateCallContract.apply(this, arguments);\n}\n\nexports.getCreateCallContract = getCreateCallContract;","map":{"version":3,"sources":["../../../src/contracts/safeDeploymentContracts.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCreateCallContract = exports.getSignMessageLibContract = exports.getMultiSendCallOnlyContract = exports.getMultiSendContract = exports.getCompatibilityFallbackHandlerContract = exports.getProxyFactoryContract = exports.getSafeContract = exports.getCreateCallContractDeployment = exports.getSignMessageLibContractDeployment = exports.getSafeProxyFactoryContractDeployment = exports.getMultiSendContractDeployment = exports.getMultiSendCallOnlyContractDeployment = exports.getCompatibilityFallbackHandlerContractDeployment = exports.getSafeContractDeployment = void 0;\nconst safe_deployments_1 = require(\"@gnosis.pm/safe-deployments\");\nconst config_1 = require(\"./config\");\nfunction getSafeContractDeployment(safeVersion, chainId, isL1SafeMasterCopy = false) {\n    const version = config_1.safeDeploymentsVersions[safeVersion].safeMasterCopyVersion;\n    const filters = { version, network: chainId.toString(), released: true };\n    if (config_1.safeDeploymentsL1ChainIds.includes(chainId) || isL1SafeMasterCopy) {\n        return (0, safe_deployments_1.getSafeSingletonDeployment)(filters);\n    }\n    return (0, safe_deployments_1.getSafeL2SingletonDeployment)(filters);\n}\nexports.getSafeContractDeployment = getSafeContractDeployment;\nfunction getCompatibilityFallbackHandlerContractDeployment(safeVersion, chainId) {\n    const version = config_1.safeDeploymentsVersions[safeVersion].compatibilityFallbackHandler;\n    return (0, safe_deployments_1.getCompatibilityFallbackHandlerDeployment)({\n        version,\n        network: chainId.toString(),\n        released: true\n    });\n}\nexports.getCompatibilityFallbackHandlerContractDeployment = getCompatibilityFallbackHandlerContractDeployment;\nfunction getMultiSendCallOnlyContractDeployment(safeVersion, chainId) {\n    const version = config_1.safeDeploymentsVersions[safeVersion].multiSendCallOnlyVersion;\n    return (0, safe_deployments_1.getMultiSendCallOnlyDeployment)({ version, network: chainId.toString(), released: true });\n}\nexports.getMultiSendCallOnlyContractDeployment = getMultiSendCallOnlyContractDeployment;\nfunction getMultiSendContractDeployment(safeVersion, chainId) {\n    const version = config_1.safeDeploymentsVersions[safeVersion].multiSendVersion;\n    return (0, safe_deployments_1.getMultiSendDeployment)({ version, network: chainId.toString(), released: true });\n}\nexports.getMultiSendContractDeployment = getMultiSendContractDeployment;\nfunction getSafeProxyFactoryContractDeployment(safeVersion, chainId) {\n    const version = config_1.safeDeploymentsVersions[safeVersion].safeProxyFactoryVersion;\n    return (0, safe_deployments_1.getProxyFactoryDeployment)({ version, network: chainId.toString(), released: true });\n}\nexports.getSafeProxyFactoryContractDeployment = getSafeProxyFactoryContractDeployment;\nfunction getSignMessageLibContractDeployment(safeVersion, chainId) {\n    const version = config_1.safeDeploymentsVersions[safeVersion].signMessageLibVersion;\n    return (0, safe_deployments_1.getSignMessageLibDeployment)({ version, network: chainId.toString(), released: true });\n}\nexports.getSignMessageLibContractDeployment = getSignMessageLibContractDeployment;\nfunction getCreateCallContractDeployment(safeVersion, chainId) {\n    const version = config_1.safeDeploymentsVersions[safeVersion].createCallVersion;\n    return (0, safe_deployments_1.getCreateCallDeployment)({ version, network: chainId.toString(), released: true });\n}\nexports.getCreateCallContractDeployment = getCreateCallContractDeployment;\nasync function getSafeContract({ ethAdapter, safeVersion, chainId, customSafeAddress, isL1SafeMasterCopy, customContracts }) {\n    const singletonDeployment = getSafeContractDeployment(safeVersion, chainId, isL1SafeMasterCopy);\n    const gnosisSafeContract = ethAdapter.getSafeContract({\n        safeVersion,\n        chainId,\n        singletonDeployment,\n        customContractAddress: customSafeAddress !== null && customSafeAddress !== void 0 ? customSafeAddress : customContracts === null || customContracts === void 0 ? void 0 : customContracts.safeMasterCopyAddress,\n        customContractAbi: customContracts === null || customContracts === void 0 ? void 0 : customContracts.safeMasterCopyAbi\n    });\n    const isContractDeployed = await ethAdapter.isContractDeployed(gnosisSafeContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('SafeProxy contract is not deployed on the current network');\n    }\n    return gnosisSafeContract;\n}\nexports.getSafeContract = getSafeContract;\nasync function getProxyFactoryContract({ ethAdapter, safeVersion, chainId, customContracts }) {\n    const proxyFactoryDeployment = getSafeProxyFactoryContractDeployment(safeVersion, chainId);\n    const safeProxyFactoryContract = await ethAdapter.getSafeProxyFactoryContract({\n        safeVersion,\n        chainId,\n        singletonDeployment: proxyFactoryDeployment,\n        customContractAddress: customContracts === null || customContracts === void 0 ? void 0 : customContracts.safeProxyFactoryAddress,\n        customContractAbi: customContracts === null || customContracts === void 0 ? void 0 : customContracts.safeProxyFactoryAbi\n    });\n    const isContractDeployed = await ethAdapter.isContractDeployed(safeProxyFactoryContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('SafeProxyFactory contract is not deployed on the current network');\n    }\n    return safeProxyFactoryContract;\n}\nexports.getProxyFactoryContract = getProxyFactoryContract;\nasync function getCompatibilityFallbackHandlerContract({ ethAdapter, safeVersion, chainId, customContracts }) {\n    const fallbackHandlerDeployment = getCompatibilityFallbackHandlerContractDeployment(safeVersion, chainId);\n    const fallbackHandlerContract = await ethAdapter.getCompatibilityFallbackHandlerContract({\n        safeVersion,\n        chainId,\n        singletonDeployment: fallbackHandlerDeployment,\n        customContractAddress: customContracts === null || customContracts === void 0 ? void 0 : customContracts.fallbackHandlerAddress,\n        customContractAbi: customContracts === null || customContracts === void 0 ? void 0 : customContracts.fallbackHandlerAbi\n    });\n    const isContractDeployed = await ethAdapter.isContractDeployed(fallbackHandlerContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('CompatibilityFallbackHandler contract is not deployed on the current network');\n    }\n    return fallbackHandlerContract;\n}\nexports.getCompatibilityFallbackHandlerContract = getCompatibilityFallbackHandlerContract;\nasync function getMultiSendContract({ ethAdapter, safeVersion, chainId, customContracts }) {\n    const multiSendDeployment = getMultiSendContractDeployment(safeVersion, chainId);\n    const multiSendContract = await ethAdapter.getMultiSendContract({\n        safeVersion,\n        chainId,\n        singletonDeployment: multiSendDeployment,\n        customContractAddress: customContracts === null || customContracts === void 0 ? void 0 : customContracts.multiSendAddress,\n        customContractAbi: customContracts === null || customContracts === void 0 ? void 0 : customContracts.multiSendAbi\n    });\n    const isContractDeployed = await ethAdapter.isContractDeployed(multiSendContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('MultiSend contract is not deployed on the current network');\n    }\n    return multiSendContract;\n}\nexports.getMultiSendContract = getMultiSendContract;\nasync function getMultiSendCallOnlyContract({ ethAdapter, safeVersion, chainId, customContracts }) {\n    const multiSendCallOnlyDeployment = getMultiSendCallOnlyContractDeployment(safeVersion, chainId);\n    const multiSendCallOnlyContract = await ethAdapter.getMultiSendCallOnlyContract({\n        safeVersion,\n        chainId,\n        singletonDeployment: multiSendCallOnlyDeployment,\n        customContractAddress: customContracts === null || customContracts === void 0 ? void 0 : customContracts.multiSendCallOnlyAddress,\n        customContractAbi: customContracts === null || customContracts === void 0 ? void 0 : customContracts.multiSendCallOnlyAbi\n    });\n    const isContractDeployed = await ethAdapter.isContractDeployed(multiSendCallOnlyContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('MultiSendCallOnly contract is not deployed on the current network');\n    }\n    return multiSendCallOnlyContract;\n}\nexports.getMultiSendCallOnlyContract = getMultiSendCallOnlyContract;\nasync function getSignMessageLibContract({ ethAdapter, safeVersion, chainId, customContracts }) {\n    const signMessageLibDeployment = getSignMessageLibContractDeployment(safeVersion, chainId);\n    const signMessageLibContract = await ethAdapter.getSignMessageLibContract({\n        safeVersion,\n        chainId,\n        singletonDeployment: signMessageLibDeployment,\n        customContractAddress: customContracts === null || customContracts === void 0 ? void 0 : customContracts.signMessageLibAddress,\n        customContractAbi: customContracts === null || customContracts === void 0 ? void 0 : customContracts.signMessageLibAbi\n    });\n    const isContractDeployed = await ethAdapter.isContractDeployed(signMessageLibContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('SignMessageLib contract is not deployed on the current network');\n    }\n    return signMessageLibContract;\n}\nexports.getSignMessageLibContract = getSignMessageLibContract;\nasync function getCreateCallContract({ ethAdapter, safeVersion, chainId, customContracts }) {\n    const createCallDeployment = getCreateCallContractDeployment(safeVersion, chainId);\n    const createCallContract = await ethAdapter.getCreateCallContract({\n        safeVersion,\n        chainId,\n        singletonDeployment: createCallDeployment,\n        customContractAddress: customContracts === null || customContracts === void 0 ? void 0 : customContracts.createCallAddress,\n        customContractAbi: customContracts === null || customContracts === void 0 ? void 0 : customContracts.createCallAbi\n    });\n    const isContractDeployed = await ethAdapter.isContractDeployed(createCallContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('CreateCall contract is not deployed on the current network');\n    }\n    return createCallContract;\n}\nexports.getCreateCallContract = getCreateCallContract;\n//# sourceMappingURL=safeDeploymentContracts.js.map"]},"metadata":{},"sourceType":"script"}