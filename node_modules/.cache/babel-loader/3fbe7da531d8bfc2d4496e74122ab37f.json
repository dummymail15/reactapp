{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSignMessageLibDeployment = exports.getCreateCallDeployment = exports.getMultiSendCallOnlyDeployment = exports.getMultiSendDeployment = void 0;\n\nconst create_call_json_1 = __importDefault(require(\"./assets/v1.3.0/create_call.json\"));\n\nconst multi_send_json_1 = __importDefault(require(\"./assets/v1.1.1/multi_send.json\"));\n\nconst multi_send_json_2 = __importDefault(require(\"./assets/v1.3.0/multi_send.json\"));\n\nconst multi_send_call_only_json_1 = __importDefault(require(\"./assets/v1.3.0/multi_send_call_only.json\"));\n\nconst sign_message_lib_json_1 = __importDefault(require(\"./assets/v1.3.0/sign_message_lib.json\"));\n\nconst utils_1 = require(\"./utils\"); // This is a sorted array (by preference, currently we use 111 in most cases)\n\n\nconst multiSendDeployments = [multi_send_json_2.default, multi_send_json_1.default];\n\nconst getMultiSendDeployment = filter => {\n  return utils_1.findDeployment(filter, multiSendDeployments);\n};\n\nexports.getMultiSendDeployment = getMultiSendDeployment; // This is a sorted array (by preference)\n\nconst multiSendCallOnlyDeployments = [multi_send_call_only_json_1.default];\n\nconst getMultiSendCallOnlyDeployment = filter => {\n  return utils_1.findDeployment(filter, multiSendCallOnlyDeployments);\n};\n\nexports.getMultiSendCallOnlyDeployment = getMultiSendCallOnlyDeployment; // This is a sorted array (by preference)\n\nconst createCallDeployments = [create_call_json_1.default];\n\nconst getCreateCallDeployment = filter => {\n  return utils_1.findDeployment(filter, createCallDeployments);\n};\n\nexports.getCreateCallDeployment = getCreateCallDeployment;\nconst signMessageLibDeployments = [sign_message_lib_json_1.default];\n\nconst getSignMessageLibDeployment = filter => {\n  return utils_1.findDeployment(filter, signMessageLibDeployments);\n};\n\nexports.getSignMessageLibDeployment = getSignMessageLibDeployment;","map":{"version":3,"sources":["/home/ravi/coinflip/coin-flip-test-main/node_modules/@gnosis.pm/safe-deployments/dist/libs.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","getSignMessageLibDeployment","getCreateCallDeployment","getMultiSendCallOnlyDeployment","getMultiSendDeployment","create_call_json_1","require","multi_send_json_1","multi_send_json_2","multi_send_call_only_json_1","sign_message_lib_json_1","utils_1","multiSendDeployments","default","filter","findDeployment","multiSendCallOnlyDeployments","createCallDeployments","signMessageLibDeployments"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,2BAAR,GAAsCF,OAAO,CAACG,uBAAR,GAAkCH,OAAO,CAACI,8BAAR,GAAyCJ,OAAO,CAACK,sBAAR,GAAiC,KAAK,CAAvJ;;AACA,MAAMC,kBAAkB,GAAGX,eAAe,CAACY,OAAO,CAAC,kCAAD,CAAR,CAA1C;;AACA,MAAMC,iBAAiB,GAAGb,eAAe,CAACY,OAAO,CAAC,iCAAD,CAAR,CAAzC;;AACA,MAAME,iBAAiB,GAAGd,eAAe,CAACY,OAAO,CAAC,iCAAD,CAAR,CAAzC;;AACA,MAAMG,2BAA2B,GAAGf,eAAe,CAACY,OAAO,CAAC,2CAAD,CAAR,CAAnD;;AACA,MAAMI,uBAAuB,GAAGhB,eAAe,CAACY,OAAO,CAAC,uCAAD,CAAR,CAA/C;;AACA,MAAMK,OAAO,GAAGL,OAAO,CAAC,SAAD,CAAvB,C,CACA;;;AACA,MAAMM,oBAAoB,GAAG,CACzBJ,iBAAiB,CAACK,OADO,EACEN,iBAAiB,CAACM,OADpB,CAA7B;;AAGA,MAAMT,sBAAsB,GAAIU,MAAD,IAAY;AACvC,SAAOH,OAAO,CAACI,cAAR,CAAuBD,MAAvB,EAA+BF,oBAA/B,CAAP;AACH,CAFD;;AAGAb,OAAO,CAACK,sBAAR,GAAiCA,sBAAjC,C,CACA;;AACA,MAAMY,4BAA4B,GAAG,CACjCP,2BAA2B,CAACI,OADK,CAArC;;AAGA,MAAMV,8BAA8B,GAAIW,MAAD,IAAY;AAC/C,SAAOH,OAAO,CAACI,cAAR,CAAuBD,MAAvB,EAA+BE,4BAA/B,CAAP;AACH,CAFD;;AAGAjB,OAAO,CAACI,8BAAR,GAAyCA,8BAAzC,C,CACA;;AACA,MAAMc,qBAAqB,GAAG,CAC1BZ,kBAAkB,CAACQ,OADO,CAA9B;;AAGA,MAAMX,uBAAuB,GAAIY,MAAD,IAAY;AACxC,SAAOH,OAAO,CAACI,cAAR,CAAuBD,MAAvB,EAA+BG,qBAA/B,CAAP;AACH,CAFD;;AAGAlB,OAAO,CAACG,uBAAR,GAAkCA,uBAAlC;AACA,MAAMgB,yBAAyB,GAAG,CAC9BR,uBAAuB,CAACG,OADM,CAAlC;;AAGA,MAAMZ,2BAA2B,GAAIa,MAAD,IAAY;AAC5C,SAAOH,OAAO,CAACI,cAAR,CAAuBD,MAAvB,EAA+BI,yBAA/B,CAAP;AACH,CAFD;;AAGAnB,OAAO,CAACE,2BAAR,GAAsCA,2BAAtC","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSignMessageLibDeployment = exports.getCreateCallDeployment = exports.getMultiSendCallOnlyDeployment = exports.getMultiSendDeployment = void 0;\nconst create_call_json_1 = __importDefault(require(\"./assets/v1.3.0/create_call.json\"));\nconst multi_send_json_1 = __importDefault(require(\"./assets/v1.1.1/multi_send.json\"));\nconst multi_send_json_2 = __importDefault(require(\"./assets/v1.3.0/multi_send.json\"));\nconst multi_send_call_only_json_1 = __importDefault(require(\"./assets/v1.3.0/multi_send_call_only.json\"));\nconst sign_message_lib_json_1 = __importDefault(require(\"./assets/v1.3.0/sign_message_lib.json\"));\nconst utils_1 = require(\"./utils\");\n// This is a sorted array (by preference, currently we use 111 in most cases)\nconst multiSendDeployments = [\n    multi_send_json_2.default, multi_send_json_1.default\n];\nconst getMultiSendDeployment = (filter) => {\n    return utils_1.findDeployment(filter, multiSendDeployments);\n};\nexports.getMultiSendDeployment = getMultiSendDeployment;\n// This is a sorted array (by preference)\nconst multiSendCallOnlyDeployments = [\n    multi_send_call_only_json_1.default\n];\nconst getMultiSendCallOnlyDeployment = (filter) => {\n    return utils_1.findDeployment(filter, multiSendCallOnlyDeployments);\n};\nexports.getMultiSendCallOnlyDeployment = getMultiSendCallOnlyDeployment;\n// This is a sorted array (by preference)\nconst createCallDeployments = [\n    create_call_json_1.default\n];\nconst getCreateCallDeployment = (filter) => {\n    return utils_1.findDeployment(filter, createCallDeployments);\n};\nexports.getCreateCallDeployment = getCreateCallDeployment;\nconst signMessageLibDeployments = [\n    sign_message_lib_json_1.default\n];\nconst getSignMessageLibDeployment = (filter) => {\n    return utils_1.findDeployment(filter, signMessageLibDeployments);\n};\nexports.getSignMessageLibDeployment = getSignMessageLibDeployment;\n"]},"metadata":{},"sourceType":"script"}