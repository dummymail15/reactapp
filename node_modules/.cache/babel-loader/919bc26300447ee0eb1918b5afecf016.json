{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/ravi/coinflip/coin-flip-test-main/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/ravi/coinflip/coin-flip-test-main/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _objectSpread = require(\"/home/ravi/coinflip/coin-flip-test-main/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeMultiSendData = exports.standardizeSafeTransactionData = exports.standardizeMetaTransactionData = void 0;\n\nvar bytes_1 = require(\"@ethersproject/bytes\");\n\nvar solidity_1 = require(\"@ethersproject/solidity\");\n\nvar safe_core_sdk_types_1 = require(\"@safe-global/safe-core-sdk-types\");\n\nvar constants_1 = require(\"../constants\");\n\nvar safeVersions_1 = require(\"../safeVersions\");\n\nvar gas_1 = require(\"./gas\");\n\nfunction standardizeMetaTransactionData(tx) {\n  var _a;\n\n  var standardizedTxs = _objectSpread(_objectSpread({}, tx), {}, {\n    operation: (_a = tx.operation) !== null && _a !== void 0 ? _a : safe_core_sdk_types_1.OperationType.Call\n  });\n\n  return standardizedTxs;\n}\n\nexports.standardizeMetaTransactionData = standardizeMetaTransactionData;\n\nfunction standardizeSafeTransactionData(_x, _x2, _x3) {\n  return _standardizeSafeTransactionData.apply(this, arguments);\n}\n\nfunction _standardizeSafeTransactionData() {\n  _standardizeSafeTransactionData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(safeContract, ethAdapter, tx) {\n    var _a, _b, _c, _d, standardizedTxs, safeTxGas, safeVersion;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = tx.to;\n            _context.t1 = tx.value;\n            _context.t2 = tx.data;\n            _context.t3 = (_a = tx.operation) !== null && _a !== void 0 ? _a : safe_core_sdk_types_1.OperationType.Call;\n            _context.t4 = (_b = tx.baseGas) !== null && _b !== void 0 ? _b : 0;\n            _context.t5 = (_c = tx.gasPrice) !== null && _c !== void 0 ? _c : 0;\n            _context.t6 = tx.gasToken || constants_1.ZERO_ADDRESS;\n            _context.t7 = tx.refundReceiver || constants_1.ZERO_ADDRESS;\n\n            if (!((_d = tx.nonce) !== null && _d !== void 0)) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.t8 = _d;\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.next = 14;\n            return safeContract.getNonce();\n\n          case 14:\n            _context.t8 = _context.sent;\n\n          case 15:\n            _context.t9 = _context.t8;\n            standardizedTxs = {\n              to: _context.t0,\n              value: _context.t1,\n              data: _context.t2,\n              operation: _context.t3,\n              baseGas: _context.t4,\n              gasPrice: _context.t5,\n              gasToken: _context.t6,\n              refundReceiver: _context.t7,\n              nonce: _context.t9\n            };\n\n            if (!(typeof tx.safeTxGas !== 'undefined')) {\n              _context.next = 19;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, standardizedTxs), {}, {\n              safeTxGas: tx.safeTxGas\n            }));\n\n          case 19:\n            _context.next = 21;\n            return safeContract.getVersion();\n\n          case 21:\n            safeVersion = _context.sent;\n\n            if (!((0, safeVersions_1.hasFeature)(safeVersions_1.FEATURES.SAFE_TX_GAS_OPTIONAL, safeVersion) && standardizedTxs.gasPrice === 0)) {\n              _context.next = 26;\n              break;\n            }\n\n            safeTxGas = 0;\n            _context.next = 29;\n            break;\n\n          case 26:\n            _context.next = 28;\n            return (0, gas_1.estimateTxGas)(safeContract, ethAdapter, standardizedTxs.to, standardizedTxs.value, standardizedTxs.data, standardizedTxs.operation);\n\n          case 28:\n            safeTxGas = _context.sent;\n\n          case 29:\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, standardizedTxs), {}, {\n              safeTxGas: safeTxGas\n            }));\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _standardizeSafeTransactionData.apply(this, arguments);\n}\n\nexports.standardizeSafeTransactionData = standardizeSafeTransactionData;\n\nfunction encodeMetaTransaction(tx) {\n  var data = (0, bytes_1.arrayify)(tx.data);\n  var encoded = (0, solidity_1.pack)(['uint8', 'address', 'uint256', 'uint256', 'bytes'], [tx.operation, tx.to, tx.value, data.length, data]);\n  return encoded.slice(2);\n}\n\nfunction encodeMultiSendData(txs) {\n  return '0x' + txs.map(function (tx) {\n    return encodeMetaTransaction(tx);\n  }).join('');\n}\n\nexports.encodeMultiSendData = encodeMultiSendData;","map":{"version":3,"sources":["../../../../src/utils/transactions/utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeMultiSendData = exports.standardizeSafeTransactionData = exports.standardizeMetaTransactionData = void 0;\nconst bytes_1 = require(\"@ethersproject/bytes\");\nconst solidity_1 = require(\"@ethersproject/solidity\");\nconst safe_core_sdk_types_1 = require(\"@safe-global/safe-core-sdk-types\");\nconst constants_1 = require(\"../constants\");\nconst safeVersions_1 = require(\"../safeVersions\");\nconst gas_1 = require(\"./gas\");\nfunction standardizeMetaTransactionData(tx) {\n    var _a;\n    const standardizedTxs = {\n        ...tx,\n        operation: (_a = tx.operation) !== null && _a !== void 0 ? _a : safe_core_sdk_types_1.OperationType.Call\n    };\n    return standardizedTxs;\n}\nexports.standardizeMetaTransactionData = standardizeMetaTransactionData;\nasync function standardizeSafeTransactionData(safeContract, ethAdapter, tx) {\n    var _a, _b, _c, _d;\n    const standardizedTxs = {\n        to: tx.to,\n        value: tx.value,\n        data: tx.data,\n        operation: (_a = tx.operation) !== null && _a !== void 0 ? _a : safe_core_sdk_types_1.OperationType.Call,\n        baseGas: (_b = tx.baseGas) !== null && _b !== void 0 ? _b : 0,\n        gasPrice: (_c = tx.gasPrice) !== null && _c !== void 0 ? _c : 0,\n        gasToken: tx.gasToken || constants_1.ZERO_ADDRESS,\n        refundReceiver: tx.refundReceiver || constants_1.ZERO_ADDRESS,\n        nonce: (_d = tx.nonce) !== null && _d !== void 0 ? _d : (await safeContract.getNonce())\n    };\n    let safeTxGas;\n    if (typeof tx.safeTxGas !== 'undefined') {\n        return {\n            ...standardizedTxs,\n            safeTxGas: tx.safeTxGas\n        };\n    }\n    const safeVersion = await safeContract.getVersion();\n    if ((0, safeVersions_1.hasFeature)(safeVersions_1.FEATURES.SAFE_TX_GAS_OPTIONAL, safeVersion) && standardizedTxs.gasPrice === 0) {\n        safeTxGas = 0;\n    }\n    else {\n        safeTxGas = await (0, gas_1.estimateTxGas)(safeContract, ethAdapter, standardizedTxs.to, standardizedTxs.value, standardizedTxs.data, standardizedTxs.operation);\n    }\n    return {\n        ...standardizedTxs,\n        safeTxGas\n    };\n}\nexports.standardizeSafeTransactionData = standardizeSafeTransactionData;\nfunction encodeMetaTransaction(tx) {\n    const data = (0, bytes_1.arrayify)(tx.data);\n    const encoded = (0, solidity_1.pack)(['uint8', 'address', 'uint256', 'uint256', 'bytes'], [tx.operation, tx.to, tx.value, data.length, data]);\n    return encoded.slice(2);\n}\nfunction encodeMultiSendData(txs) {\n    return '0x' + txs.map((tx) => encodeMetaTransaction(tx)).join('');\n}\nexports.encodeMultiSendData = encodeMultiSendData;\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}