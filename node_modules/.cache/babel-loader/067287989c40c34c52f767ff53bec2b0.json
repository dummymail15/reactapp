{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findDeployment = void 0;\n\nconst satisfies_1 = __importDefault(require(\"semver/functions/satisfies\"));\n\nconst DEFAULT_FILTER = {\n  released: true\n};\n\nconst findDeployment = function () {\n  let criteria = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_FILTER;\n  let deployments = arguments.length > 1 ? arguments[1] : undefined;\n  return deployments.find(deployment => {\n    if (criteria.version && !satisfies_1.default(deployment.version, criteria.version)) return false;\n    if (typeof criteria.released === 'boolean' && deployment.released != criteria.released) return false;\n    if (criteria.network && !deployment.networkAddresses[criteria.network]) return false;\n    return true;\n  });\n};\n\nexports.findDeployment = findDeployment;","map":{"version":3,"sources":["/home/ravi/coinflip/coin-flip-test-main/node_modules/@gnosis.pm/safe-deployments/dist/utils.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","findDeployment","satisfies_1","require","DEFAULT_FILTER","released","criteria","deployments","find","deployment","version","default","network","networkAddresses"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyB,KAAK,CAA9B;;AACA,MAAMC,WAAW,GAAGR,eAAe,CAACS,OAAO,CAAC,4BAAD,CAAR,CAAnC;;AACA,MAAMC,cAAc,GAAG;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAvB;;AACA,MAAMJ,cAAc,GAAG;AAAA,MAACK,QAAD,uEAAYF,cAAZ;AAAA,MAA4BG,WAA5B;AAAA,SAA4CA,WAAW,CAACC,IAAZ,CAAkBC,UAAD,IAAgB;AAChG,QAAIH,QAAQ,CAACI,OAAT,IAAoB,CAACR,WAAW,CAACS,OAAZ,CAAoBF,UAAU,CAACC,OAA/B,EAAwCJ,QAAQ,CAACI,OAAjD,CAAzB,EACI,OAAO,KAAP;AACJ,QAAI,OAAOJ,QAAQ,CAACD,QAAhB,KAA6B,SAA7B,IAA0CI,UAAU,CAACJ,QAAX,IAAuBC,QAAQ,CAACD,QAA9E,EACI,OAAO,KAAP;AACJ,QAAIC,QAAQ,CAACM,OAAT,IAAoB,CAACH,UAAU,CAACI,gBAAX,CAA4BP,QAAQ,CAACM,OAArC,CAAzB,EACI,OAAO,KAAP;AACJ,WAAO,IAAP;AACH,GARkE,CAA5C;AAAA,CAAvB;;AASAb,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findDeployment = void 0;\nconst satisfies_1 = __importDefault(require(\"semver/functions/satisfies\"));\nconst DEFAULT_FILTER = { released: true };\nconst findDeployment = (criteria = DEFAULT_FILTER, deployments) => deployments.find((deployment) => {\n    if (criteria.version && !satisfies_1.default(deployment.version, criteria.version))\n        return false;\n    if (typeof criteria.released === 'boolean' && deployment.released != criteria.released)\n        return false;\n    if (criteria.network && !deployment.networkAddresses[criteria.network])\n        return false;\n    return true;\n});\nexports.findDeployment = findDeployment;\n"]},"metadata":{},"sourceType":"script"}