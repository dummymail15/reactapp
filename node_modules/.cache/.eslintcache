[{"/home/ravi/coinflip/coin-flip-test-main/src/index.js":"1","/home/ravi/coinflip/coin-flip-test-main/src/App.js":"2","/home/ravi/coinflip/coin-flip-test-main/src/reportWebVitals.js":"3","/home/ravi/coinflip/coin-flip-test-main/src/Wallet.js":"4","/home/ravi/coinflip/coin-flip-test-main/src/Interactions.js":"5","/home/ravi/coinflip/coin-flip-test-main/src/Interactions1.js":"6"},{"size":500,"mtime":1646637354000,"results":"7","hashOfConfig":"8"},{"size":194,"mtime":1646637354000,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1646637354000,"results":"10","hashOfConfig":"8"},{"size":3712,"mtime":1675135815538,"results":"11","hashOfConfig":"8"},{"size":1163,"mtime":1646637354000,"results":"12","hashOfConfig":"8"},{"size":1599,"mtime":1674118222267,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"u0mdv2",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/home/ravi/coinflip/coin-flip-test-main/src/index.js",[],["31","32"],"/home/ravi/coinflip/coin-flip-test-main/src/App.js",["33"],"import logo from './logo.svg';\nimport './App.css';\nimport Wallet from './Wallet.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wallet/>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ravi/coinflip/coin-flip-test-main/src/reportWebVitals.js",[],"/home/ravi/coinflip/coin-flip-test-main/src/Wallet.js",["34","35","36","37","38","39","40","41","42","43","44"],"import {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\nimport styles from './Wallet.module.css'\nimport simple_token_abi from './Contracts/simple_token_abi.json'\nimport Interactions from './Interactions';\nimport Interactions1 from './Interactions1';\nimport EthersAdapter from '@safe-global/safe-ethers-lib'\nimport Safe, { SafeFactory, EthSignSignature } from '@safe-global/safe-core-sdk'\n\nconst Wallet = () => {\n\n\t// ganache-cli address\n\tconst contractAddress = '0xad86835f962a1F28aB3bafa771aaf5C86eC6D40d';\n\n\tconst [tokenName, setTokenName] = useState(\"Coin Flip Game\");\n\tconst [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\n\tconst [balance, setBalance] = useState(null);\n\n\tconst [provider, setProvider] = useState(null);\n\tconst [signer, setSigner] = useState(null);\n\tconst [contract, setContract] = useState(null);\n\n\n\tconst connectWalletHandler = () => {\n\t\tif (window.ethereum && window.ethereum.isMetaMask) {\n\n\t\t\twindow.ethereum.request({method: 'eth_requestAccounts'})\n\t\t\t.then(result => {\n\t\t\t\taccountChangedHandler(result[0]);\n\t\t\t\tsetConnButtonText('Wallet Connected');\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t})\n\n\n\t\t} else {\n\t\t\tconsole.log('need to install metamask');\n\t\t\tsetErrorMessage('Please install MetaMask');\n\t\t}\n\t}\n\n\n\n\n\n\tconst accountChangedHandler = (newAddress) => {\n\t\tsetDefaultAccount(newAddress);\n\t\tupdateEthers();\n\t}\n\n\tconst updateEthers = async () => {\n\t\tlet tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n\n\t\tlet tempSigner = tempProvider.getSigner();\n\n\n\t\tconst ethAdapter = new EthersAdapter({\n\t\t\tethers,\n\t\t\tsignerOrProvider: tempSigner\n\t\t})\n\n\t\tconst safeFactory = await SafeFactory.create({ ethAdapter });\n\n\t\tconst owners = ['0xb67c267A0D15547f4C675318111A0492e1bCEB5f', '0xA0c97D5164b953c731bFFB7d0BAe88eE2417e064'];\n\t\tconst threshold = 2;\n\t\t\n\t\tconsole.log(\"safeFactory  \",safeFactory);\n\n\t\tconst safeAccountConfig = { owners: owners, threshold: threshold};\n\t \n\t\t\tconst safeSdk_ceo = await safeFactory.deploySafe({safeAccountConfig});\n\t\n\t\t\n\t\t\n\t\tconsole.log(\"treasury 2  \",safeSdk_ceo);\n\t\n\t\n\t\t  // Getting the address of the safe\n\t\t  const treasury = safeSdk_ceo.getAddress();\n\t\t\n\t\t\n\t\t  console.log(\"treasury   \",treasury);\n\n\n\t//\tlet tempContract = new ethers.Contract(contractAddress, simple_token_abi, tempSigner)\n\n\t\tsetProvider(tempProvider);\n\t\tsetSigner(tempSigner);\n\t\tsetContract(ethAdapter);\n\t}\n\n\tuseEffect(() => {\n\t\tif (contract != null) {\n\t\t//\tupdateBalance();\n\t\t//\tupdateTokenName();\n\t\t}\n\t}, [contract])\n\n\tconst updateBalance = async () => {\n\t\tlet balanceBigN = await contract.getuserBalance();\n\t\tlet balanceNumber = balanceBigN.toNumber();\n\n\t//\tlet decimals = await contract.decimals();\n\n\t//\tlet tokenBalance = balanceNumber / Math.pow(10, decimals);\n\n\t\tsetBalance(balanceNumber);\n\t\tconsole.log(balanceNumber);\n\t}\n\n\tconst updateTokenName = async () => {\n\n\t\t\n\t\tlet betBoolean = true;\n\t\tconsole.log(betBoolean)\n\t\tlet txt = await contract.flip(betBoolean);\n\t\tconsole.log(txt);\n\t}\n\t\nreturn (\n\t<div>\n\t\t<h2> {tokenName} </h2>\n\t\t\t<h2> {\"Refresh the page after performing any action.\"} </h2>\n\t\t<h2> {\"Step-1. Connect your metamask by clicking below\"} </h2>\n\t\t<button className={styles.button6} onClick={connectWalletHandler}>{connButtonText}</button>\n\n\t\t<div className = {styles.walletCard}>\n\t\t\t<div>\n\t\t\t\t<h3>Address: {defaultAccount}</h3>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h3>{tokenName} User Balance: {balance}</h3>\n\t\t\t</div>\n\t\t\t{errorMessage}\n\t\t\t</div>\n\n\t\t{/* <Interactions1 contract={contract}/> */}\n\t\t\t{/* <Interactions contract={contract}/> */}\n\n\t\t\n\t</div>\n\t);\n}\n\nexport default Wallet;","/home/ravi/coinflip/coin-flip-test-main/src/Interactions.js",["45","46"],"import {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\nimport styles from './Wallet.module.css'\n\n\nconst Interactions = (props) => {\n\n\tconst [transferHash, setTransferHash] = useState(null);\n\n\tconst transferHandler = async (e) => {\n\t\te.preventDefault();\n\t\tlet betBoolean = e.target.bet.checked;\n\t\tconsole.log(betBoolean)\n\t\ttry{\n\t\tlet txt = await props.contract.flip(betBoolean);\n\t\tsetTransferHash(txt.hash);\n\t\t}catch(e){\n\t\t\tsetTransferHash(e.message);\n\t\t}\n\t\t\n\t}\n\t\nreturn (\n\t\t\t<div className={styles.interactionsCard}>\n\t\t\t\t<form onSubmit={transferHandler}>\n\t\t\t\t\t\t<h2> {\"Step-3. Flip the Coin here \"} </h2>\n\t\t\t\t\t<h3> {\"Once you receive the transaction hash, just refresh the page.\"}</h3>\n\t\t\t\t\t\t<h3> Your Balance will get doubled if you win or will become 0 if you loose.</h3>\n\t\t\t\t\t<h3> Flip the Coin here</h3>\n\t\t\t\t\t\t<p> Checked Box - Head</p>\n\t\t\t\n\t\t\t\t\t\t<p> Unchecked Box - Tail </p>\n\t\t\t\t\t\t<input type='checkbox' id='bet' step='1' style={{width:\"30px\",height:\"30px\"}}/>\n\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Send</button>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{transferHash}\n\t\t\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t</div>\n\t\t)\n}\n\nexport default Interactions;","/home/ravi/coinflip/coin-flip-test-main/src/Interactions1.js",["47","48","49","50","51"],"import {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\nimport styles from './Wallet.module.css'\n\nimport EthersAdapter from '@safe-global/safe-ethers-lib'\nimport Safe, { SafeFactory, EthSignSignature } from '@safe-global/safe-core-sdk'\n\n\nconst Interactions1 = (ethAdapter) => {\n\n\tconst [transferHash, setTransferHash] = useState(null);\n\n\tconst transferHandler = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst safeFactory = await SafeFactory.create({ ethAdapter });\n\n\t\tconst owners = ['0xb67c267A0D15547f4C675318111A0492e1bCEB5f', '0xA0c97D5164b953c731bFFB7d0BAe88eE2417e064'];\n\t\tconst threshold = 2;\n\t\t\n\t\tconsole.log(\"safeFactory  \",safeFactory);\n\n\t\tconst safeAccountConfig = { owners: owners, threshold: threshold};\n\t \n\t\t\tconst safeSdk_ceo = await safeFactory.deploySafe({safeAccountConfig});\n\t\n\t\t\n\t\t\n\t\tconsole.log(\"treasury 2  \",safeSdk_ceo);\n\t\n\t\n\t\t  // Getting the address of the safe\n\t\t  const treasury = safeSdk_ceo.getAddress();\n\t\t\n\t\t\n\t\t  console.log(\"treasury   \",treasury);\n\n\t\t//let betAmount = e.target.betAmount.value;\n\t\t\n\t\n\t\t//let txt = await props.contract.deposit({ value: ethers.utils.parseEther(betAmount)});\n\n\t\tsetTransferHash(treasury);\n\t}\n\t\nreturn (\n\t\n\t\t\t<div className={styles.interactionsCard}>\n\t\t\t\t<form onSubmit={transferHandler}>\n\t\t\t\t\t\t<h2> {\"Step-1. Deploying safe. \"} </h2>\n\t\t\t\t\t\t<p> Amount </p>\n\t\t\t\t\t\t<input type='number' id='betAmount' className={styles.numberInput}/>\n\n\t\t\t\t\t\n\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Send</button>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{transferHash}\n\t\t\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t</div>\n\t\t)\n}\n\nexport default Interactions1;",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":24},{"ruleId":"56","severity":1,"message":"61","line":5,"column":8,"nodeType":"58","messageId":"59","endLine":5,"endColumn":20},{"ruleId":"56","severity":1,"message":"62","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":21},{"ruleId":"56","severity":1,"message":"63","line":8,"column":8,"nodeType":"58","messageId":"59","endLine":8,"endColumn":12},{"ruleId":"56","severity":1,"message":"64","line":8,"column":29,"nodeType":"58","messageId":"59","endLine":8,"endColumn":45},{"ruleId":"56","severity":1,"message":"65","line":13,"column":8,"nodeType":"58","messageId":"59","endLine":13,"endColumn":23},{"ruleId":"56","severity":1,"message":"66","line":15,"column":20,"nodeType":"58","messageId":"59","endLine":15,"endColumn":32},{"ruleId":"56","severity":1,"message":"67","line":21,"column":9,"nodeType":"58","messageId":"59","endLine":21,"endColumn":17},{"ruleId":"56","severity":1,"message":"68","line":22,"column":9,"nodeType":"58","messageId":"59","endLine":22,"endColumn":15},{"ruleId":"56","severity":1,"message":"69","line":102,"column":8,"nodeType":"58","messageId":"59","endLine":102,"endColumn":21},{"ruleId":"56","severity":1,"message":"70","line":114,"column":8,"nodeType":"58","messageId":"59","endLine":114,"endColumn":23},{"ruleId":"56","severity":1,"message":"71","line":1,"column":26,"nodeType":"58","messageId":"59","endLine":1,"endColumn":35},{"ruleId":"56","severity":1,"message":"72","line":2,"column":9,"nodeType":"58","messageId":"59","endLine":2,"endColumn":15},{"ruleId":"56","severity":1,"message":"71","line":1,"column":26,"nodeType":"58","messageId":"59","endLine":1,"endColumn":35},{"ruleId":"56","severity":1,"message":"72","line":2,"column":9,"nodeType":"58","messageId":"59","endLine":2,"endColumn":15},{"ruleId":"56","severity":1,"message":"73","line":5,"column":8,"nodeType":"58","messageId":"59","endLine":5,"endColumn":21},{"ruleId":"56","severity":1,"message":"63","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":12},{"ruleId":"56","severity":1,"message":"64","line":6,"column":29,"nodeType":"58","messageId":"59","endLine":6,"endColumn":45},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'simple_token_abi' is defined but never used.","'Interactions' is defined but never used.","'Interactions1' is defined but never used.","'Safe' is defined but never used.","'EthSignSignature' is defined but never used.","'contractAddress' is assigned a value but never used.","'setTokenName' is assigned a value but never used.","'provider' is assigned a value but never used.","'signer' is assigned a value but never used.","'updateBalance' is assigned a value but never used.","'updateTokenName' is assigned a value but never used.","'useEffect' is defined but never used.","'ethers' is defined but never used.","'EthersAdapter' is defined but never used.","no-global-assign","no-unsafe-negation"]